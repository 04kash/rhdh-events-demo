{"version":3,"file":"static/2203.b2a3e021.chunk.js","mappings":"yUAGA,MAAMA,GAAU,IAAAC,oBAAc,GACxBC,EAAmBC,IACvB,MAAM,SAAEC,EAAQ,MAAEC,GAAUF,GACrBG,EAAYC,IAAa,IAAAC,UAASH,GACnCI,EAAQ,CACZJ,MAAOC,GAET,OAAuB,IAAAI,KAAIV,EAAQW,SAAU,CAAEF,QAAOL,YAAW,ECF7DQ,GAAY,IAAAC,aAAYC,IAAU,CACtCC,QAAS,CACPC,QAAS,OACTC,SAAU,OACVC,UAAW,UAEbC,KAAM,CACJC,OAAQN,EAAMO,QAAQ,GAAK,IAE7BC,MAAO,CACLC,UAAWT,EAAMO,QAAQ,GACzBG,MAAO,OACPC,SAAU,QACVC,WAAY,OACZC,aAAc,aACdC,MAAOd,EAAMe,QAAQC,KAAKC,WAE5BC,KAAM,CACJR,MAAO,OACPS,OAAQ,OACRC,aAAc,OACdC,eAAgB,SAChBC,WAAY,SACZC,UAAWvB,EAAMwB,QAAQ,GACzBC,gBAAiBzB,EAAMe,QAAQW,WAAWC,aAGxCC,EAAWvC,IACf,MAAMwC,EAAU/B,IACVG,GDxBQ,IAAA6B,YAAW5C,GCyBnBK,EAAQU,GAASV,OAASF,EAAME,MACtC,OAAuB,IAAAK,KAAImC,EAAA,EAAM,CAAEC,UAAWH,EAAQ5B,QAASX,SAAUC,EAAM0C,KAAK5B,IAAyB,IAAA6B,MAAK,KAAM,CAAEC,GAAI9B,EAAK+B,IAAKJ,UAAWH,EAAQxB,KAAMf,SAAU,EACzJ,IAAAM,KAAIyC,EAAA,EAAc,CAAEL,UAAWH,EAAQX,KAAM5B,SAAUe,EAAKa,QAC5D,IAAAtB,KACd0C,EAAA,EACA,CACEC,yBAA0B,CAAEP,UAAWH,EAAQrB,OAC/CS,UAAWZ,EAAKG,UAGjBH,EAAK+B,QAAQ,C,wGCrBhBC,EAA4B,cAAiB,SAAsBhD,EAAOmD,GAC5E,IAAIX,EAAUxC,EAAMwC,QAChBG,EAAY3C,EAAM2C,UAClBS,GAAQ,OAAyBpD,EAAO,CAAC,UAAW,cAEpDqD,EAAU,aAAiB,KAC/B,OAAoB,gBAAoB,OAAO,OAAS,CACtDV,WAAW,OAAKH,EAAQc,KAAMX,EAAkC,eAAvBU,EAAQpB,YAA+BO,EAAQe,qBACxFJ,IAAKA,GACJC,GACL,IAwBA,SAAe,QAtDK,SAAgBzC,GAClC,MAAO,CAEL2C,KAAM,CACJE,SAAU,GACV/B,MAAOd,EAAMe,QAAQ+B,OAAOC,OAC5BC,WAAY,EACZ9C,QAAS,eAIX0C,oBAAqB,CACnBnC,UAAW,GAGjB,GAuCkC,CAChCwC,KAAM,mBADR,CAEGZ,E","sources":["webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/plugin-home/dist/homePageComponents/Toolkit/Context.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/plugin-home/dist/homePageComponents/Toolkit/Content.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js"],"sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { createContext, useState, useContext } from 'react';\n\nconst Context = createContext(void 0);\nconst ContextProvider = (props) => {\n  const { children, tools } = props;\n  const [toolsValue, _setTools] = useState(tools);\n  const value = {\n    tools: toolsValue\n  };\n  return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n};\nconst useToolkit = () => {\n  const value = useContext(Context);\n  return value;\n};\n\nexport { ContextProvider, Context as default, useToolkit };\n//# sourceMappingURL=Context.esm.js.map\n","import { jsx, jsxs } from 'react/jsx-runtime';\nimport { Link } from '@backstage/core-components';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useToolkit } from './Context.esm.js';\n\nconst useStyles = makeStyles((theme) => ({\n  toolkit: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    textAlign: \"center\"\n  },\n  tool: {\n    margin: theme.spacing(0.5, 1)\n  },\n  label: {\n    marginTop: theme.spacing(1),\n    width: \"72px\",\n    fontSize: \"0.9em\",\n    lineHeight: \"1.25\",\n    overflowWrap: \"break-word\",\n    color: theme.palette.text.secondary\n  },\n  icon: {\n    width: \"64px\",\n    height: \"64px\",\n    borderRadius: \"50px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    boxShadow: theme.shadows[1],\n    backgroundColor: theme.palette.background.default\n  }\n}));\nconst Content = (props) => {\n  const classes = useStyles();\n  const toolkit = useToolkit();\n  const tools = toolkit?.tools ?? props.tools;\n  return /* @__PURE__ */ jsx(List, { className: classes.toolkit, children: tools.map((tool) => /* @__PURE__ */ jsxs(Link, { to: tool.url, className: classes.tool, children: [\n    /* @__PURE__ */ jsx(ListItemIcon, { className: classes.icon, children: tool.icon }),\n    /* @__PURE__ */ jsx(\n      ListItemText,\n      {\n        secondaryTypographyProps: { className: classes.label },\n        secondary: tool.label\n      }\n    )\n  ] }, tool.url)) });\n};\n\nexport { Content };\n//# sourceMappingURL=Content.esm.js.map\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);"],"names":["Context","createContext","ContextProvider","props","children","tools","toolsValue","_setTools","useState","value","jsx","Provider","useStyles","makeStyles","theme","toolkit","display","flexWrap","textAlign","tool","margin","spacing","label","marginTop","width","fontSize","lineHeight","overflowWrap","color","palette","text","secondary","icon","height","borderRadius","justifyContent","alignItems","boxShadow","shadows","backgroundColor","background","default","Content","classes","useContext","List","className","map","jsxs","to","url","ListItemIcon","ListItemText","secondaryTypographyProps","ref","other","context","root","alignItemsFlexStart","minWidth","action","active","flexShrink","name"],"sourceRoot":""}